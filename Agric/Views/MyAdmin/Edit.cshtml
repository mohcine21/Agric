@model Agric.Models.Essai

@{ ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; }

<div class="text-center"><h2> ESSAI </h2></div>


<script src="https://code.jquery.com/jquery-3.3.1.js"></script>





<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<script>
    $(function () {
        $("#datepicker1").datepicker({
            altField: "#datepicker",
            closeText: 'Fermer',
            prevText: 'Précédent',
            nextText: 'Suivant',
            currentText: 'Aujourd\'hui',
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
            dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
            weekHeader: 'Sem.',
            dateFormat: 'yy-mm-dd'

          
        });

        $("#datepicker2").datepicker({
            altField: "#datepicker",
            closeText: 'Fermer',
            prevText: 'Précédent',
            nextText: 'Suivant',
            currentText: 'Aujourd\'hui',
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
            dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
            weekHeader: 'Sem.',
            dateFormat: 'yy-mm-dd'
        });

        $("#datepicker3").datepicker({
            altField: "#datepicker",
            closeText: 'Fermer',
            prevText: 'Précédent',
            nextText: 'Suivant',
            currentText: 'Aujourd\'hui',
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
            dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
            weekHeader: 'Sem.',
            dateFormat: 'yy-mm-dd'
        });

        $("#datepicker4").datepicker({
            altField: "#datepicker",
            closeText: 'Fermer',
            prevText: 'Précédent',
            nextText: 'Suivant',
            currentText: 'Aujourd\'hui',
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
            dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
            weekHeader: 'Sem.',
            dateFormat: 'yy-mm-dd'
        });

        $("#datepicker5").datepicker({
            altField: "#datepicker",
            closeText: 'Fermer',
            prevText: 'Précédent',
            nextText: 'Suivant',
            currentText: 'Aujourd\'hui',
            monthNames: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
            monthNamesShort: ['Janv.', 'Févr.', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil.', 'Août', 'Sept.', 'Oct.', 'Nov.', 'Déc.'],
            dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            dayNamesShort: ['Dim.', 'Lun.', 'Mar.', 'Mer.', 'Jeu.', 'Ven.', 'Sam.'],
            dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
            weekHeader: 'Sem.',
            dateFormat: 'yy-mm-dd'
        });
    });
</script>



<form action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.DevisDemander)
        @Html.HiddenFor(model => model.ACB)
        @Html.HiddenFor(model => model.FDS)
        @Html.HiddenFor(model => model.FDEFicheEssai)
        @Html.HiddenFor(model => model.FNNotation)
        @Html.HiddenFor(model => model.Payer)
        @Html.HiddenFor(model => model.Payer50)
        @Html.HiddenFor(model => model.Facture)
        @Html.HiddenFor(model => model.PE)
        @Html.HiddenFor(model => model.id_devis)
        @Html.HiddenFor(model => model.Rapport)
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Client", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodeClient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodeClient, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CodeClient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Paiment_Regler50, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Paiment_Regler50, new List<SelectListItem>
                                                            ()
                                                        {
                    new SelectListItem() { Text = "Payer", Value = "True" },
                    new SelectListItem() { Text = "Payer 50%", Value = "False"}
                    }, "Non Payer", new { @id = "flag", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Paiment_Regler50)
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.TA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Formulation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Formulation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Formulation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date_Instalation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Instalation, new { htmlAttributes = new { @class = "form-control", id = "datepicker1", placeholder = "Date d'instalation"} })
             
                @Html.ValidationMessageFor(model => model.Date_Instalation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                <input type="file" name="_PE" value="">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EtatEssai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EtatEssai, new List<SelectListItem>
                                                            ()
                                                        {
                    new SelectListItem() { Text = "Réalisé", Value = "Réalisé" },
                    new SelectListItem() { Text = "Annulé", Value = "Annulé"},
                     new SelectListItem() { Text = "Non installer", Value = "Non installer"},
                     new SelectListItem() { Text = "En cours", Value = "En cours"}
                    }, "Vide.....", new { @id = "flag", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EtatEssai)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PR, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DPRéf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DPRéf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DPRéf, "", new { @class = "text-danger" })
            </div>
        </div> <div class="form-group">
            @Html.LabelFor(model => model.FormulationProduitRéf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FormulationProduitRéf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormulationProduitRéf, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Produit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Produit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Produit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date_Reception_Produit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Reception_Produit, new { htmlAttributes = new { @class = "form-control", id = "datepicker4" ,placeholder = "Date Réception Produit" } })

                @Html.ValidationMessageFor(model => model.Date_Reception_Produit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Culture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Culture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Culture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cible, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cible, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MARéf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MARéf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MARéf, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date_Reception_ACB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Reception_ACB, new { htmlAttributes = new { @class = "form-control", id = "datepicker5", placeholder = "Date Réception ACB" } })

                @Html.ValidationMessageFor(model => model.Date_Reception_ACB, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ACB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="_ACB" value="">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FDS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                <input type="file" name="_FDS" value="">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date_Cloture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Date_Cloture, new { htmlAttributes = new { @class = "form-control" }, Type = "date" })*@
                @Html.EditorFor(model => model.Date_Cloture, new { htmlAttributes = new { @class = "form-control", id = "datepicker2", placeholder = "Date cloture"} })

                @Html.ValidationMessageFor(model => model.Date_Cloture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rapport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="_Rapport" value="">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Mode_action, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mode_action, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mode_action, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Epoque_application, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Epoque_application, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Epoque_application, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RapportRemis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RapportRemis, new List<SelectListItem>
                                                            ()
                                                        {
                    new SelectListItem() { Text = "Yes", Value = "True" },
                    new SelectListItem() { Text = "No", Value = "False"}
                    }, "Select.....", new { @id = "flag", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RapportRemis)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRemisRapport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DateRemisRapport, new { htmlAttributes = new { @class = "form-control" }, Type = "date" })*@
                @Html.EditorFor(model => model.DateRemisRapport, new { htmlAttributes = new { @class = "form-control", id = "datepicker3", placeholder = "Date de Remise du Rapport"} })

                @Html.ValidationMessageFor(model => model.DateRemisRapport, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Facture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                <input type="file" name="_Facture" value="">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Labo Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LaboName", new SelectList(ViewBag.LaboId, "Text", "Text"), "-- Vide -- ")
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Tech Nom", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("TechName", new SelectList(ViewBag.TechId, "Text", "Text"), "-- Vide -- ")
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>


        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class=" btn btn-primary btn-block"> Enregistrer </button>
            </div>
            &nbsp;
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-primary btn-block" href="~/MyAdmin/DetailsEssai/@Model.Id"> Annulé</a>
            </div>
        </div>
    </div>
</form>

